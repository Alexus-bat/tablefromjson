{"version":3,"sources":["pages/ExampleJSON.tsx","components/Table.tsx","pages/MainPage.tsx","App.tsx","index.tsx"],"names":["ExampleJSON","useState","data","setData","useEffect","fetch","then","res","json","table","catch","e","console","log","className","to","Button","variant","color","JSON","stringify","Table","header","rows","map","item","idx","column_name","Date","now","Object","keys","obj","MainPage","url","setUrl","handleClickAddTable","object","Error","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","finally","newestOnTop","rtl","pauseOnFocusLoss","onClick","hasOwnProperty","id","filter","_","TextField","label","value","onChange","target","handleChangeInput","App","component","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bd0af41.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ITable } from \"../types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ExampleJSON: React.FC = () => {\r\n    const [data, setData] = useState<ITable | {}>({})\r\n    \r\n    useEffect(() => {\r\n        fetch('./data.json')\r\n        .then(res => res.json())\r\n        .then(table => setData(table.data))\r\n        .catch(e => console.log(e))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"Example\">\r\n            <NavLink to='/' className=\"link\">\r\n                <Button variant=\"contained\" color=\"primary\">Back</Button>\r\n            </NavLink>\r\n            <pre>{JSON.stringify(data, null, '\\t')}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExampleJSON;\r\n","import React from 'react';\r\nimport { ITable } from '../types';\r\n\r\nimport '../styles/Table.scss';\r\n\r\nconst Table: React.FC<ITable> = ({ header, rows }) => {\r\n    return (\r\n        <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {header.map((item, idx) => (\r\n                            <th key={Date.now() + idx}>{item.column_name}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map((item, idx) => (\r\n                        <tr key={Date.now() + idx}>\r\n                            {                            \r\n                                Object.keys(item).map((obj) => (\r\n                                    <td key={Date.now() + obj}>{item[obj] ?? ''}</td>\r\n                                ))   \r\n                            }\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport { ITable } from \"../types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Table from \"../components/Table\";\r\n\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport '../styles/Main.scss';\r\n\r\nconst instanceOfInterface = (object: any): object is ITable => 'header' in object && 'rows' in object;\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [data, setData] = useState<ITable[]>([]);\r\n    const [url, setUrl] = useState<string>('');\r\n\r\n    const handleClickAddTable = (url: string) => {\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(table => {\r\n            if (instanceOfInterface(table.data)) {\r\n                setData([...data, table.data])\r\n            } else throw new Error('Invalid object! Try again!')\r\n          })\r\n          .catch(e => {           \r\n            toast.error(e.message || 'Error fetch data! Try again!!', {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n          })\r\n          .finally(() => setUrl(''))\r\n    }\r\n\r\n    const handleClickRemoveTable = (id: number) => {\r\n        setData(data.filter((_, idx) => idx !== id))\r\n    }\r\n\r\n    const handleChangeInput = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n        setUrl(e.target.value);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"main\">            \r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <NavLink to='/example' className=\"link\">\r\n                <Button variant=\"contained\">Example JSON</Button>\r\n            </NavLink>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickAddTable('./data.json')}>Example Table</Button>\r\n            {data.map((item, idx) => {\r\n                if (item.hasOwnProperty('header') && item.hasOwnProperty('rows')) {\r\n                    return (\r\n                        <div key={Date.now() + idx}>\r\n                            <Table {...item} />\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleClickRemoveTable(idx)}>Remove table</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n                return null\r\n            })}\r\n            <form>\r\n                <TextField label=\"DataURL\" variant=\"outlined\" className=\"input\" value={url} onChange={(e) => handleChangeInput(e)} />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickAddTable(url)}>Add table</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport ExampleJSON from './pages/ExampleJSON';\nimport MainPage from './pages/MainPage';\n\n\nimport './styles/App.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <BrowserRouter>\n          <Switch>\n            <Route component={MainPage} path='/' exact />\n            <Route component={ExampleJSON} path='/example' exact />\n            <Redirect to='/' />\n          </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}