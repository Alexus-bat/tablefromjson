{"version":3,"sources":["pages/ExampleJSON.tsx","components/Table.tsx","pages/MainPage.tsx","App.tsx","index.tsx"],"names":["ExampleJSON","className","to","Button","variant","color","JSON","stringify","data","Table","header","rows","map","item","idx","column_name","Date","now","Object","keys","obj","MainPage","useState","setData","url","setUrl","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","onClick","dataJSON","hasOwnProperty","id","filter","_","TextField","label","value","onChange","e","target","handleChangeInput","fetch","then","res","json","table","object","Error","catch","toast","error","message","progress","undefined","finally","handleClickAddTable","App","component","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73f633ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport data from '../data.json';\r\n\r\nconst ExampleJSON: React.FC = () => {\r\n    return (\r\n        <div className=\"Example\">\r\n            <NavLink to='/' className=\"link\">\r\n                <Button variant=\"contained\" color=\"primary\">Back</Button>\r\n            </NavLink>\r\n            <pre>{JSON.stringify(data, null, '\\t')}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExampleJSON;\r\n","import React from 'react';\r\nimport { ITable } from '../types';\r\n\r\nimport '../styles/Table.scss';\r\n\r\nconst Table: React.FC<ITable> = ({ header, rows }) => {\r\n    return (\r\n        <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {header.map((item, idx) => (\r\n                            <th key={Date.now() + idx}>{item.column_name}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map((item, idx) => (\r\n                        <tr key={Date.now() + idx}>\r\n                            {                            \r\n                                Object.keys(item).map((obj) => (\r\n                                    <td key={Date.now() + obj}>{item[obj] ?? ''}</td>\r\n                                ))   \r\n                            }\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport { ITable } from \"../types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Table from \"../components/Table\";\r\n\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport '../styles/Main.scss';\r\nimport dataJSON from '../data.json';\r\n\r\nconst instanceOfInterface = (object: any): object is ITable => 'header' in object && 'rows' in object;\r\n\r\nconst MainPage: React.FC = () => {\r\n    const [data, setData] = useState<ITable[]>([]);\r\n    const [url, setUrl] = useState<string>('');\r\n\r\n    const handleClickAddTable = (url: string) => {\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(table => {\r\n            if (instanceOfInterface(table.data)) {\r\n                setData([...data, table.data])\r\n            } else throw new Error('Invalid object! Try again!')\r\n          })\r\n          .catch(e => {           \r\n            toast.error(e.message || 'Error fetch data! Try again!!', {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n          })\r\n          .finally(() => setUrl(''))\r\n    }\r\n\r\n    const handleClickRemoveTable = (id: number) => {\r\n        setData(data.filter((_, idx) => idx !== id))\r\n    }\r\n\r\n    const handleChangeInput = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n        setUrl(e.target.value);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"main\">            \r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <NavLink to='/example' className=\"link\">\r\n                <Button variant=\"contained\">Example JSON</Button>\r\n            </NavLink>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setData([...data, dataJSON.data])}>Example Table</Button>\r\n            {data.map((item, idx) => {\r\n                if (item.hasOwnProperty('header') && item.hasOwnProperty('rows')) {\r\n                    return (\r\n                        <div key={Date.now() + idx}>\r\n                            <Table {...item} />\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleClickRemoveTable(idx)}>Remove table</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n                return null\r\n            })}\r\n            <form>\r\n                <TextField label=\"DataURL\" variant=\"outlined\" className=\"input\" value={url} onChange={(e) => handleChangeInput(e)} />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickAddTable(url)}>Add table</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport ExampleJSON from './pages/ExampleJSON';\r\nimport MainPage from './pages/MainPage';\r\n\r\n\r\nimport './styles/App.scss';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <BrowserRouter>\r\n          <Switch>\r\n            <Route component={MainPage} path='/' exact />\r\n            <Route component={ExampleJSON} path='/example' exact />\r\n            <Redirect to='/' />\r\n          </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}